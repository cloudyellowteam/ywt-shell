name: Continuous Integration

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  pack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install YDK Shell SDK
        run: |
          packages/ydk/ydk.cli.sh install
      - name: Packing YDK Shell SDK
        run: |
          packages/ydk/ydk.cli.sh packer pack "$(realpath ./packages/ydk/ydk.cli.sh)"
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # "centos:latest", "opensuse/leap:latest" "archlinux:latest" "fedora:latest"
        container: ["ubuntu:latest", "alpine:latest", "kalilinux/kali-rolling", "debian:latest"]
    container: ${{ matrix.container }}
    steps:
    - uses: actions/checkout@v4
    - name: Install Alpine Depencencies
      shell: sh
      run: |
        apk add --update bash
      if: matrix.container == 'alpine:latest'    
    - name: Install YDK Shell SDK
      run: |
        packages/ydk/ydk.cli.sh install
    - name: Packing YDK Shell SDK
      run: |
        packages/ydk/ydk.cli.sh packer pack ./packages/ydk/ydk.cli.sh

# - name: Install Depencencies
#   shell: bash
#   run: |
#     apt-get update
#     apt-get install -y curl gnupg docker.io
#   if: matrix.container != 'alpine:latest'    
# - name: Build the Docker image
#   run: |
#    docker build . --no-cache --file docker/ywt-shell/Dockerfile.alpine --tag ydk-shell:$(date +%s)
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     # container:
#     #   image: alpine:latest
#     steps:
#     - uses: actions/checkout@v4
#     - name: Build the Docker image
#       run: |
#        docker build . --no-cache --file docker/ywt-shell/Dockerfile.alpine --tag ydk-shell:$(date +%s)
#     - name: Install YDK Shell SDK
#       run: |
#         apk add --update > /dev/null 
#         apk add --no-cache bash > /dev/null 
#         packages/ydk/ydk.cli.sh install
    
